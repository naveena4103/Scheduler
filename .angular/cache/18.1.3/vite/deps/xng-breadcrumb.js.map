{
  "version": 3,
  "sources": ["../../../../../node_modules/xng-breadcrumb/fesm2022/xng-breadcrumb.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { Directive, Injectable, TemplateRef, Component, ViewEncapsulation, ContentChild, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/router';\nimport { GuardsCheckEnd, RouterModule } from '@angular/router';\nimport { filter, map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\n/**\n * This directive is used to customize the breadcrumb label behavior\n * *xngBreadcrumbItem directive can be used in the child element of xng-breadcrumb\n * Usage: refer to the demo - app.component.html\n */\nconst _c0 = a0 => ({\n  \"xng-breadcrumb-link-disabled\": a0\n});\nconst _c1 = (a0, a1, a2, a3, a4, a5) => ({\n  $implicit: a0,\n  info: a1,\n  last: a2,\n  first: a3,\n  index: a4,\n  count: a5\n});\nfunction BreadcrumbComponent_ng_container_2_a_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction BreadcrumbComponent_ng_container_2_a_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const breadcrumb_r1 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(breadcrumb_r1.label);\n  }\n}\nfunction BreadcrumbComponent_ng_container_2_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 7);\n    i0.ɵɵtemplate(1, BreadcrumbComponent_ng_container_2_a_2_ng_container_1_Template, 1, 0, \"ng-container\", 8)(2, BreadcrumbComponent_ng_container_2_a_2_ng_container_2_Template, 2, 1, \"ng-container\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    const breadcrumb_r1 = ctx_r1.$implicit;\n    const isLast_r3 = ctx_r1.last;\n    const isFirst_r4 = ctx_r1.first;\n    const index_r5 = ctx_r1.index;\n    const count_r6 = ctx_r1.count;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, breadcrumb_r1.disable))(\"routerLink\", breadcrumb_r1.routeInterceptor ? breadcrumb_r1.routeInterceptor(breadcrumb_r1.routeLink, breadcrumb_r1) : breadcrumb_r1.routeLink)(\"queryParams\", ctx_r6.preserveQueryParams ? breadcrumb_r1.queryParams : undefined)(\"fragment\", ctx_r6.preserveFragment ? breadcrumb_r1.fragment : undefined)(\"target\", ctx_r6.anchorTarget ? ctx_r6.anchorTarget : \"_self\");\n    i0.ɵɵattribute(\"aria-disabled\", breadcrumb_r1.disable)(\"tabIndex\", breadcrumb_r1.disable ? -1 : 0);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r6.itemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction6(12, _c1, breadcrumb_r1.label, breadcrumb_r1.info, isLast_r3, isFirst_r4, index_r5, count_r6));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r6.itemTemplate);\n  }\n}\nfunction BreadcrumbComponent_ng_container_2_label_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction BreadcrumbComponent_ng_container_2_label_3_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const breadcrumb_r1 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(breadcrumb_r1.label);\n  }\n}\nfunction BreadcrumbComponent_ng_container_2_label_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 10);\n    i0.ɵɵtemplate(1, BreadcrumbComponent_ng_container_2_label_3_ng_container_1_Template, 1, 0, \"ng-container\", 8)(2, BreadcrumbComponent_ng_container_2_label_3_ng_container_2_Template, 2, 1, \"ng-container\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    const breadcrumb_r1 = ctx_r1.$implicit;\n    const isLast_r3 = ctx_r1.last;\n    const isFirst_r4 = ctx_r1.first;\n    const index_r5 = ctx_r1.index;\n    const count_r6 = ctx_r1.count;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r6.itemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction6(3, _c1, breadcrumb_r1.label, breadcrumb_r1.info, isLast_r3, isFirst_r4, index_r5, count_r6));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r6.itemTemplate);\n  }\n}\nfunction BreadcrumbComponent_ng_container_2_li_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction BreadcrumbComponent_ng_container_2_li_4_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r6.separator);\n  }\n}\nfunction BreadcrumbComponent_ng_container_2_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 11);\n    i0.ɵɵtemplate(1, BreadcrumbComponent_ng_container_2_li_4_ng_container_1_Template, 1, 0, \"ng-container\", 12)(2, BreadcrumbComponent_ng_container_2_li_4_ng_container_2_Template, 2, 1, \"ng-container\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r6.separatorTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r6.separatorTemplate);\n  }\n}\nfunction BreadcrumbComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"li\", 3);\n    i0.ɵɵtemplate(2, BreadcrumbComponent_ng_container_2_a_2_Template, 3, 19, \"a\", 4)(3, BreadcrumbComponent_ng_container_2_label_3_Template, 3, 10, \"label\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, BreadcrumbComponent_ng_container_2_li_4_Template, 3, 2, \"li\", 6);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const isLast_r3 = ctx.last;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !isLast_r3);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", isLast_r3);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !isLast_r3);\n  }\n}\nclass BreadcrumbItemDirective {\n  static {\n    this.ɵfac = function BreadcrumbItemDirective_Factory(ɵt) {\n      return new (ɵt || BreadcrumbItemDirective)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: BreadcrumbItemDirective,\n      selectors: [[\"\", \"xngBreadcrumbItem\", \"\"]]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BreadcrumbItemDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[xngBreadcrumbItem]'\n    }]\n  }], null, null);\n})();\nconst PATH_PARAM = {\n  PREFIX: ':',\n  REGEX_IDENTIFIER: '/:[^/]+',\n  REGEX_REPLACER: '/[^/]+'\n};\nconst ALIAS_PREFIX = '@';\nconst isNonEmpty = obj => {\n  return obj && Object.keys(obj).length > 0;\n};\nclass BreadcrumbService {\n  constructor(activatedRoute, router) {\n    this.activatedRoute = activatedRoute;\n    this.router = router;\n    this.baseHref = '/';\n    /**\n     * dynamicBreadcrumbStore holds information about dynamically updated breadcrumbs.\n     * Breadcrumbs can be set from anywhere (component, service) in the app.\n     * On every breadcrumb update check this store and use the info if available.\n     */\n    this.dynamicBreadcrumbStore = [];\n    /**\n     * breadcrumbList for the current route\n     * When breadcrumb info is changed dynamically, check if the currentBreadcrumbs is effected\n     * If effected, update the change and emit a new stream\n     */\n    this.currentBreadcrumbs = [];\n    this.previousBreadcrumbs = [];\n    /**\n     * Breadcrumbs observable to be subscribed by BreadcrumbComponent\n     * Emits on every route change OR dynamic update of breadcrumb\n     */\n    this.breadcrumbs = new BehaviorSubject([]);\n    this.breadcrumbs$ = this.breadcrumbs.asObservable();\n    this.detectRouteChanges();\n  }\n  /**\n   * Whenever route changes build breadcrumb list again\n   */\n  detectRouteChanges() {\n    // Special case where breadcrumb service & component instantiates after a route is navigated.\n    // Ex: put breadcrumbs within *ngIf and this.router.events would be empty\n    // This check is also required where  { initialNavigation: 'enabledBlocking' } is applied to routes\n    this.setupBreadcrumbs(this.activatedRoute.snapshot);\n    this.router.events.pipe(filter(event => event instanceof GuardsCheckEnd)).subscribe(event => {\n      // activatedRoute doesn't carry data when shouldReuseRoute returns false\n      // use the event data with GuardsCheckEnd as workaround\n      // Check for shouldActivate in case where the authGuard returns false the breadcrumbs shouldn't be changed\n      if (event.shouldActivate) {\n        this.setupBreadcrumbs(event.state.root);\n      }\n    });\n  }\n  setupBreadcrumbs(activatedRouteSnapshot) {\n    this.previousBreadcrumbs = this.currentBreadcrumbs;\n    // breadcrumb label for base OR root path. Usually, this can be set as 'Home'\n    const rootBreadcrumb = this.getRootBreadcrumb();\n    this.currentBreadcrumbs = rootBreadcrumb ? [rootBreadcrumb] : [];\n    this.prepareBreadcrumbList(activatedRouteSnapshot, this.baseHref);\n  }\n  getRootBreadcrumb() {\n    const rootConfig = this.router.config.find(config => config.path === '');\n    const rootBreadcrumb = this.extractObject(rootConfig?.data?.['breadcrumb']);\n    const storeItem = this.getFromStore(rootBreadcrumb.alias, '/');\n    if (isNonEmpty(rootBreadcrumb) || isNonEmpty(storeItem)) {\n      return {\n        ...storeItem,\n        ...rootBreadcrumb,\n        routeLink: this.baseHref,\n        ...this.getQueryParamsFromPreviousList('/')\n      };\n    }\n  }\n  prepareBreadcrumbItem(activatedRouteSnapshot, routeLinkPrefix) {\n    const {\n      path,\n      breadcrumb\n    } = this.parseRouteData(activatedRouteSnapshot.routeConfig);\n    const resolvedSegment = this.resolvePathSegment(path, activatedRouteSnapshot);\n    const routeLink = `${routeLinkPrefix}${resolvedSegment}`;\n    const storeItem = this.getFromStore(breadcrumb.alias, routeLink);\n    const label = this.extractLabel(storeItem?.label || breadcrumb?.label, resolvedSegment);\n    let isAutoGeneratedLabel = false;\n    let autoGeneratedLabel = '';\n    if (!label) {\n      isAutoGeneratedLabel = true;\n      autoGeneratedLabel = resolvedSegment;\n    }\n    return {\n      ...storeItem,\n      ...breadcrumb,\n      label: isAutoGeneratedLabel ? autoGeneratedLabel : label,\n      routeLink,\n      isAutoGeneratedLabel,\n      ...this.getQueryParamsFromPreviousList(routeLink)\n    };\n  }\n  prepareBreadcrumbList(activatedRouteSnapshot, routeLinkPrefix) {\n    if (activatedRouteSnapshot.routeConfig?.path) {\n      const breadcrumbItem = this.prepareBreadcrumbItem(activatedRouteSnapshot, routeLinkPrefix);\n      this.currentBreadcrumbs.push(breadcrumbItem);\n      if (activatedRouteSnapshot.firstChild) {\n        return this.prepareBreadcrumbList(activatedRouteSnapshot.firstChild, breadcrumbItem.routeLink + '/');\n      }\n    } else if (activatedRouteSnapshot.firstChild) {\n      return this.prepareBreadcrumbList(activatedRouteSnapshot.firstChild, routeLinkPrefix);\n    }\n    const lastCrumb = this.currentBreadcrumbs[this.currentBreadcrumbs.length - 1];\n    this.setQueryParamsForActiveBreadcrumb(lastCrumb, activatedRouteSnapshot);\n    // remove breadcrumb items that needs to be hidden\n    const breadcrumbsToShow = this.currentBreadcrumbs.filter(item => !item.skip);\n    this.breadcrumbs.next(breadcrumbsToShow);\n  }\n  getFromStore(alias, routeLink) {\n    return this.dynamicBreadcrumbStore.find(item => {\n      return alias && alias === item.alias || routeLink && routeLink === item.routeLink || this.matchRegex(routeLink, item.routeRegex);\n    });\n  }\n  /**\n   * use exact match instead of regexp.test\n   * for /mentor/[^/]+ we should match '/mentor/12' but not '/mentor/12/abc'\n   */\n  matchRegex(routeLink, routeRegex) {\n    const match = routeLink.match(new RegExp(routeRegex));\n    return match?.[0] === routeLink;\n  }\n  /**\n   * if the path segment has route params, read the param value from url\n   * for each segment of route this gets called\n   *\n   * for mentor/:id/view - it gets called with mentor, :id, view 3 times\n   */\n  resolvePathSegment(segment, activatedRouteSnapshot) {\n    //quirk -segment can be defined as view/:id in route config in which case you need to make it view/<resolved-param>\n    if (segment.includes(PATH_PARAM.PREFIX)) {\n      Object.entries(activatedRouteSnapshot.params).forEach(([key, value]) => {\n        segment = segment.replace(`:${key}`, `${value}`);\n      });\n    }\n    return segment;\n  }\n  /**\n   * queryParams & fragments for previous breadcrumb path are copied over to new list\n   */\n  getQueryParamsFromPreviousList(routeLink) {\n    const {\n      queryParams,\n      fragment\n    } = this.previousBreadcrumbs.find(item => item.routeLink === routeLink) || {};\n    return {\n      queryParams,\n      fragment\n    };\n  }\n  /**\n   * set current activated route query params to the last breadcrumb item\n   */\n  setQueryParamsForActiveBreadcrumb(lastItem, activatedRouteSnapshot) {\n    if (lastItem) {\n      const {\n        queryParams,\n        fragment\n      } = activatedRouteSnapshot;\n      lastItem.queryParams = queryParams ? {\n        ...queryParams\n      } : undefined;\n      lastItem.fragment = fragment;\n    }\n  }\n  /**\n   * For a specific route, breadcrumb can be defined either on parent OR it's child(which has empty path)\n   * When both are defined, child takes precedence\n   *\n   * Ex: Below we are setting breadcrumb on both parent and child.\n   * So, child takes precedence and \"Defined On Child\" is displayed for the route 'home'\n   * { path: 'home', loadChildren: () => import('./home/home.module').then((m) => m.HomeModule) , data: {breadcrumb: \"Defined On Module\"}}\n   *                                                AND\n   * children: [\n   *   { path: '', component: ShowUserComponent, data: {breadcrumb: \"Defined On Child\" }\n   * ]\n   */\n  parseRouteData(routeConfig) {\n    const {\n      path,\n      data\n    } = routeConfig;\n    const breadcrumb = this.mergeWithBaseChildData(routeConfig, data?.breadcrumb);\n    return {\n      path,\n      breadcrumb\n    };\n  }\n  /**\n   * get empty children of a module or Component. Empty child is the one with path: ''\n   * When parent and it's children (that has empty route path) define data merge them both with child taking precedence\n   */\n  mergeWithBaseChildData(routeConfig, config) {\n    if (!routeConfig) {\n      return this.extractObject(config);\n    }\n    let baseChild;\n    if (routeConfig.loadChildren) {\n      // To handle a module with empty child route\n      baseChild = routeConfig._loadedRoutes.find(route => route.path === '');\n    } else if (routeConfig.children) {\n      // To handle a component with empty child route\n      baseChild = routeConfig.children.find(route => route.path === '');\n    }\n    const childConfig = baseChild?.data?.breadcrumb;\n    return childConfig ? this.mergeWithBaseChildData(baseChild, {\n      ...this.extractObject(config),\n      ...this.extractObject(childConfig)\n    }) : this.extractObject(config);\n  }\n  /**\n   * Update breadcrumb dynamically\n   *\n   * key can be a path | alias\n   *\n   * 1) Using complete route path. route can be passed the same way you define angular routes\n   * - path can be passed as 'exact path(routeLink)' or 'path with params(routeRegex)'\n   * - update label Ex: set('/mentor', 'Mentor'), set('/mentor/:id', 'Mentor Details')\n   * - change visibility Ex: set('/mentor/:id/edit', { skip: true })\n   * ------------------------------------------ OR ------------------------------------------\n   * 2) Using route alias (prefixed with '@'). alias should be unique for a route\n   * - update label Ex: set('@mentor', 'Enabler')\n   * - change visibility Ex: set('@mentorEdit', { skip: true })\n   *\n   *\n   * value can be string | BreadcrumbObject | BreadcrumbFunction\n   */\n  set(key, breadcrumb) {\n    const breadcrumbObject = this.extractObject(breadcrumb);\n    let updateArgs;\n    if (key.startsWith(ALIAS_PREFIX)) {\n      updateArgs = ['alias', {\n        ...breadcrumbObject,\n        alias: key.slice(1)\n      }];\n    } else if (key.includes(PATH_PARAM.PREFIX)) {\n      updateArgs = ['routeRegex', {\n        ...breadcrumbObject,\n        routeRegex: this.buildRegex(key)\n      }];\n    } else {\n      updateArgs = ['routeLink', {\n        ...breadcrumbObject,\n        routeLink: this.ensureLeadingSlash(key)\n      }];\n    }\n    // For this route if previously a breadcrumb is not defined that sets isAutoGeneratedLabel: true\n    // change it to false since this is user supplied value\n    updateArgs[1].isAutoGeneratedLabel = false;\n    this.updateStore(...updateArgs);\n    this.updateCurrentBreadcrumbs(...updateArgs);\n  }\n  /**\n   * Update the store to reuse for dynamic declarations\n   * If the store already has this route definition update it, else add\n   */\n  updateStore(key, breadcrumb) {\n    const storeItemIndex = this.dynamicBreadcrumbStore.findIndex(item => {\n      return breadcrumb[key] === item[key];\n    });\n    if (storeItemIndex > -1) {\n      this.dynamicBreadcrumbStore[storeItemIndex] = {\n        ...this.dynamicBreadcrumbStore[storeItemIndex],\n        ...breadcrumb\n      };\n    } else {\n      this.dynamicBreadcrumbStore.push({\n        ...breadcrumb\n      });\n    }\n  }\n  /**\n   * If breadcrumb is present in current breadcrumbs update it and emit new stream\n   */\n  updateCurrentBreadcrumbs(key, breadcrumb) {\n    const itemIndex = this.currentBreadcrumbs.findIndex(item => {\n      return key === 'routeRegex' ? this.matchRegex(item.routeLink, breadcrumb[key]) : breadcrumb[key] === item[key];\n    });\n    if (itemIndex > -1) {\n      this.currentBreadcrumbs[itemIndex] = {\n        ...this.currentBreadcrumbs[itemIndex],\n        ...breadcrumb\n      };\n      const breadcrumbsToShow = this.currentBreadcrumbs.filter(item => !item.skip);\n      this.breadcrumbs.next([...breadcrumbsToShow]);\n    }\n  }\n  /**\n   * For a route with path param, we create regex dynamically from angular route syntax\n   * '/mentor/:id' becomes '/mentor/[^/]',\n   * breadcrumbService.set('/mentor/:id', 'Uday') should update 'Uday' as label for '/mentor/2' OR 'mentor/ada'\n   */\n  buildRegex(path) {\n    return this.ensureLeadingSlash(path).replace(new RegExp(PATH_PARAM.REGEX_IDENTIFIER, 'g'), PATH_PARAM.REGEX_REPLACER);\n  }\n  ensureLeadingSlash(path) {\n    return path.startsWith('/') ? path : `/${path}`;\n  }\n  /**\n   * In App's RouteConfig, breadcrumb can be defined as a string OR a function OR an object\n   *\n   * string: simple static breadcrumb label for a path\n   * function: callback that gets invoked with resolved path param\n   * object: additional data defined along with breadcrumb label that gets passed to *xngBreadcrumbItem directive\n   */\n  extractLabel(config, resolvedParam) {\n    const label = typeof config === 'object' ? config.label : config;\n    if (typeof label === 'function') {\n      return label(resolvedParam);\n    }\n    return label;\n  }\n  extractObject(config) {\n    // don't include {label} if config is undefined. This is important since we merge the configs\n    if (config && (typeof config === 'string' || typeof config === 'function')) {\n      return {\n        label: config\n      };\n    }\n    return config || {};\n  }\n  static {\n    this.ɵfac = function BreadcrumbService_Factory(ɵt) {\n      return new (ɵt || BreadcrumbService)(i0.ɵɵinject(i1.ActivatedRoute), i0.ɵɵinject(i1.Router));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: BreadcrumbService,\n      factory: BreadcrumbService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BreadcrumbService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.ActivatedRoute\n    }, {\n      type: i1.Router\n    }];\n  }, null);\n})();\nclass BreadcrumbComponent {\n  /**\n   * separator between breadcrumbs, defaults to '/'.\n   * User can customize separator either by passing a String or Template\n   *\n   * String --> Ex: <xng-breadcrumb separator=\"-\"> </xng-breadcrumb>\n   *\n   * Template --> Ex: <xng-breadcrumb [separator]=\"separatorTemplate\"> </xng-breadcrumb>\n   * <ng-template #separatorTemplate><mat-icon>arrow_right</mat-icon></ng-template>\n   */\n  set separator(value) {\n    if (value instanceof TemplateRef) {\n      this.separatorTemplate = value;\n      this._separator = undefined;\n    } else {\n      this.separatorTemplate = undefined;\n      this._separator = value || '/';\n    }\n  }\n  get separator() {\n    return this._separator;\n  }\n  constructor(breadcrumbService, activateRoute) {\n    this.breadcrumbService = breadcrumbService;\n    this._separator = '/';\n    /**\n     * If true, breadcrumb is auto generated even without any mapping label\n     * Default label is same as route segment\n     */\n    this.autoGenerate = true;\n    /**\n     * By default query params will be preserved with breadcrumbs\n     */\n    this.preserveQueryParams = true;\n    /**\n     * By default query fragments will be preserved with breadcrumbs\n     */\n    this.preserveFragment = true;\n    /**\n     * custom class provided by consumer to increase specificity\n     * This will benefit to override styles that are conflicting\n     */\n    this.class = '';\n    this.setupMessage = 'not set up yet';\n    this.someParameterValue = null;\n    // breadcrumb inside ngIf works only this way\n    activateRoute.params.subscribe(params => {\n      this.setupComponent(params['someParam']);\n    });\n  }\n  setupComponent(someParam) {\n    this.setupMessage = 'set up at ' + new Date();\n    this.someParameterValue = someParam;\n  }\n  ngOnInit() {\n    this.breadcrumbs$ = this.breadcrumbService.breadcrumbs$.pipe(map(breadcrumbs => {\n      return breadcrumbs.filter(breadcrumb => {\n        // Usually, breadcrumb list can contain a combination of auto generated and user specified labels\n        // this filters autogenerated labels in case of \"[autoGenerate]: false\"\n        if (this.autoGenerate) {\n          return true;\n        }\n        return !breadcrumb.isAutoGeneratedLabel;\n      }).map(breadcrumb => {\n        // Do not mutate breadcrumb as its source of truth.\n        // There can be scenarios where we can have multiple xng-breadcrumb instances in page\n        const {\n          routeInterceptor,\n          routeLink\n        } = breadcrumb;\n        return {\n          ...breadcrumb,\n          routeLink: routeInterceptor?.(routeLink, breadcrumb) || routeLink\n        };\n      });\n    }));\n  }\n  static {\n    this.ɵfac = function BreadcrumbComponent_Factory(ɵt) {\n      return new (ɵt || BreadcrumbComponent)(i0.ɵɵdirectiveInject(BreadcrumbService), i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: BreadcrumbComponent,\n      selectors: [[\"xng-breadcrumb\"]],\n      contentQueries: function BreadcrumbComponent_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, BreadcrumbItemDirective, 5, TemplateRef);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.itemTemplate = _t.first);\n        }\n      },\n      inputs: {\n        autoGenerate: \"autoGenerate\",\n        preserveQueryParams: \"preserveQueryParams\",\n        preserveFragment: \"preserveFragment\",\n        class: \"class\",\n        anchorTarget: \"anchorTarget\",\n        separator: \"separator\"\n      },\n      decls: 4,\n      vars: 4,\n      consts: [[\"aria-label\", \"breadcrumb\", 1, \"xng-breadcrumb-root\", 3, \"ngClass\"], [1, \"xng-breadcrumb-list\"], [4, \"ngFor\", \"ngForOf\"], [1, \"xng-breadcrumb-item\"], [\"class\", \"xng-breadcrumb-link\", \"rel\", \"noopener noreferrer\", 3, \"ngClass\", \"routerLink\", \"queryParams\", \"fragment\", \"target\", 4, \"ngIf\"], [\"class\", \"xng-breadcrumb-trail\", 4, \"ngIf\"], [\"class\", \"xng-breadcrumb-separator\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"rel\", \"noopener noreferrer\", 1, \"xng-breadcrumb-link\", 3, \"ngClass\", \"routerLink\", \"queryParams\", \"fragment\", \"target\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [4, \"ngIf\"], [1, \"xng-breadcrumb-trail\"], [\"aria-hidden\", \"true\", 1, \"xng-breadcrumb-separator\"], [4, \"ngTemplateOutlet\"]],\n      template: function BreadcrumbComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"nav\", 0)(1, \"ol\", 1);\n          i0.ɵɵtemplate(2, BreadcrumbComponent_ng_container_2_Template, 5, 3, \"ng-container\", 2);\n          i0.ɵɵpipe(3, \"async\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngClass\", ctx.class);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(3, 2, ctx.breadcrumbs$));\n        }\n      },\n      dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i3.NgTemplateOutlet, i1.RouterLink, i3.AsyncPipe],\n      styles: [\".xng-breadcrumb-root{margin:0}.xng-breadcrumb-list{display:flex;align-items:center;flex-wrap:wrap;margin:0;padding:0}.xng-breadcrumb-item{list-style:none}.xng-breadcrumb-trail{display:flex;align-items:center}.xng-breadcrumb-link{display:flex;align-items:center;white-space:nowrap;color:inherit;text-decoration:none;transition:-webkit-text-decoration .3s;transition:text-decoration .3s;transition:text-decoration .3s,-webkit-text-decoration .3s;cursor:pointer}.xng-breadcrumb-link:hover{text-decoration:underline}.xng-breadcrumb-link-disabled{pointer-events:none;cursor:disabled}.xng-breadcrumb-separator{display:flex;-webkit-user-select:none;user-select:none;margin-left:8px;margin-right:8px}\\n\"],\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BreadcrumbComponent, [{\n    type: Component,\n    args: [{\n      selector: 'xng-breadcrumb',\n      encapsulation: ViewEncapsulation.None,\n      template: \"<nav aria-label=\\\"breadcrumb\\\" class=\\\"xng-breadcrumb-root\\\" [ngClass]=\\\"class\\\">\\n  <ol class=\\\"xng-breadcrumb-list\\\">\\n    <ng-container\\n      *ngFor=\\\"\\n        let breadcrumb of breadcrumbs$ | async;\\n        last as isLast;\\n        first as isFirst;\\n        index as index;\\n        count as count\\n      \\\"\\n    >\\n      <li class=\\\"xng-breadcrumb-item\\\">\\n        <a\\n          *ngIf=\\\"!isLast\\\"\\n          class=\\\"xng-breadcrumb-link\\\"\\n          [ngClass]=\\\"{ 'xng-breadcrumb-link-disabled': breadcrumb.disable }\\\"\\n          [attr.aria-disabled]=\\\"breadcrumb.disable\\\"\\n          [attr.tabIndex]=\\\"breadcrumb.disable ? -1 : 0\\\"\\n          rel=\\\"noopener noreferrer\\\"\\n          [routerLink]=\\\"\\n            breadcrumb.routeInterceptor\\n              ? breadcrumb.routeInterceptor(breadcrumb.routeLink, breadcrumb)\\n              : breadcrumb.routeLink\\n          \\\"\\n          [queryParams]=\\\"\\n            preserveQueryParams ? breadcrumb.queryParams : undefined\\n          \\\"\\n          [fragment]=\\\"preserveFragment ? breadcrumb.fragment : undefined\\\"\\n          [target]=\\\"anchorTarget ? anchorTarget : '_self'\\\"\\n        >\\n          <ng-container\\n            *ngTemplateOutlet=\\\"\\n              itemTemplate;\\n              context: {\\n                $implicit: breadcrumb.label,\\n                info: breadcrumb.info,\\n                last: isLast,\\n                first: isFirst,\\n                index: index,\\n                count: count\\n              }\\n            \\\"\\n          ></ng-container>\\n          <ng-container *ngIf=\\\"!itemTemplate\\\">{{\\n            breadcrumb.label\\n          }}</ng-container>\\n        </a>\\n\\n        <label *ngIf=\\\"isLast\\\" class=\\\"xng-breadcrumb-trail\\\">\\n          <ng-container\\n            *ngTemplateOutlet=\\\"\\n              itemTemplate;\\n              context: {\\n                $implicit: breadcrumb.label,\\n                info: breadcrumb.info,\\n                last: isLast,\\n                first: isFirst,\\n                index: index,\\n                count: count\\n              }\\n            \\\"\\n          ></ng-container>\\n          <ng-container *ngIf=\\\"!itemTemplate\\\">{{\\n            breadcrumb.label\\n          }}</ng-container>\\n        </label>\\n      </li>\\n\\n      <li *ngIf=\\\"!isLast\\\" class=\\\"xng-breadcrumb-separator\\\" aria-hidden=\\\"true\\\">\\n        <ng-container *ngTemplateOutlet=\\\"separatorTemplate\\\"></ng-container>\\n        <ng-container *ngIf=\\\"!separatorTemplate\\\">{{ separator }}</ng-container>\\n      </li>\\n    </ng-container>\\n  </ol>\\n</nav>\\n\",\n      styles: [\".xng-breadcrumb-root{margin:0}.xng-breadcrumb-list{display:flex;align-items:center;flex-wrap:wrap;margin:0;padding:0}.xng-breadcrumb-item{list-style:none}.xng-breadcrumb-trail{display:flex;align-items:center}.xng-breadcrumb-link{display:flex;align-items:center;white-space:nowrap;color:inherit;text-decoration:none;transition:-webkit-text-decoration .3s;transition:text-decoration .3s;transition:text-decoration .3s,-webkit-text-decoration .3s;cursor:pointer}.xng-breadcrumb-link:hover{text-decoration:underline}.xng-breadcrumb-link-disabled{pointer-events:none;cursor:disabled}.xng-breadcrumb-separator{display:flex;-webkit-user-select:none;user-select:none;margin-left:8px;margin-right:8px}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: BreadcrumbService\n    }, {\n      type: i1.ActivatedRoute\n    }];\n  }, {\n    itemTemplate: [{\n      type: ContentChild,\n      args: [BreadcrumbItemDirective, {\n        static: false,\n        read: TemplateRef\n      }]\n    }],\n    autoGenerate: [{\n      type: Input\n    }],\n    preserveQueryParams: [{\n      type: Input\n    }],\n    preserveFragment: [{\n      type: Input\n    }],\n    class: [{\n      type: Input\n    }],\n    anchorTarget: [{\n      type: Input\n    }],\n    separator: [{\n      type: Input\n    }]\n  });\n})();\nclass BreadcrumbModule {\n  static {\n    this.ɵfac = function BreadcrumbModule_Factory(ɵt) {\n      return new (ɵt || BreadcrumbModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: BreadcrumbModule,\n      declarations: [BreadcrumbComponent, BreadcrumbItemDirective],\n      imports: [CommonModule, RouterModule],\n      exports: [BreadcrumbComponent, BreadcrumbItemDirective]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule, RouterModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BreadcrumbModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [BreadcrumbComponent, BreadcrumbItemDirective],\n      imports: [CommonModule, RouterModule],\n      exports: [BreadcrumbComponent, BreadcrumbItemDirective]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of xng-breadcrumb\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreadcrumbComponent, BreadcrumbItemDirective, BreadcrumbModule, BreadcrumbService };\n"],
  "mappings": "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",
  "names": []
}
